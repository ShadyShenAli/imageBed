const fs = require("fs/promises");
const https = require("https");
const path = require("path");
const hostname = "0.0.0.0";
const port = 3000;
const mimeType = {
  "js"  : "application/javascript",
  "css" : "text/css",
  "woff2" : "font/woff2",
  "png" : "image/png",
  "jpeg" : "image/jpg",
  "jpg" : "image/jpg",
  "gif" : "image/gif"
}

// server01.css.sap.corp
const cert = Buffer.from(`LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYvRENDQStTZ0F3SUJBZ0lRWjR2TW9UYUJ6MUxrbFoxdlZSR214VEFOQmdrcWhraUc5dzBCQVFzRkFEQkUKTVFzd0NRWURWUVFHRXdKRVJURVJNQThHQTFVRUJ3d0lWMkZzYkdSdmNtWXhEREFLQmdOVkJBb01BMU5CVURFVQpNQklHQTFVRUF3d0xVMEZRVG1WMFEwRmZSekl3SGhjTk1qTXdOakkxTURJek1ESTNXaGNOTWpRd05qSTFNREl6Ck1ESTNXakJKTVFzd0NRWURWUVFHRXdKRVJURU1NQW9HQTFVRUNoTURVMEZRTVF3d0NnWURWUVFMRXdORFUxTXgKSGpBY0JnTlZCQU1URlhObGNuWmxjakF4TG1OemN5NXpZWEF1WTI5eWNEQ0NBU0l3RFFZSktvWklodmNOQVFFQgpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLUjliQi83TXRLZVNOYTdBMjJtZi9yK0NzckZUWGdscFpMUlJKVTNBNUwyCnBoNDJDQmN4c1gzRmxZdWZ3azYreUEzSlZKRnN3SG83R0ZYQlZuS0N5YkY0NVByVXVkWlUyeGxueTkyendFaXkKK3BidklORmRweWNRUVpqV3U1WFFNZVRGRWlmWHdGMERSYmFYVFJDY0N1M1hQTEpvcURzYnBTU3BEamdGckNiOQp0d0xIRlBPYmNoenNGeUVBUlNieFVWZ2FLSTd1RWRUaWhORTVsdWNQb2R4WC9LT1ltUU9JU01ZV0xUbEo1MEVPCnlubU1XWXNxSHpORW5XRlJjdC9mWmhXSkkzcGwvcUsxbmhXRGxEOTRRekM5b3JBSEVpT3RXUTA2bWR3TDg0b0wKUjJEeDRCbDFTQW9sWllXNTJQOGE2UE5lcFJaV2libjZMVmFndzFzbmpnc0NBd0VBQWFPQ0FlTXdnZ0hmTUIwRwpBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFmQmdOVkhTTUVHREFXZ0JRNEpLK05kUkw4Ck9EODNneEN2a0R6OEd5RmEvekJKQmdnckJnRUZCUWNCQVFROU1Ec3dPUVlJS3dZQkJRVUhNQUtHTFdoMGRIQTYKTHk5aGFXRXVjR3RwTG1OdkxuTmhjQzVqYjIwdllXbGhMMU5CVUU1bGRFTkJYMGN5TG1OeWREQ0Ixd1lEVlIwZgpCSUhQTUlITU1JSEpvSUhHb0lIRGhpMW9kSFJ3T2k4dlkyUndMbkJyYVM1amJ5NXpZWEF1WTI5dEwyTmtjQzlUClFWQk9aWFJEUVY5SE1pNWpjbXlHZ1pGc1pHRndPaTh2TDBOT1BWTkJVRTVGVkVOQlJ6SXNRMDQ5VTBGUVRrVlUKUTBGSE1peERUajFEUkZBc1EwNDlVSFZpYkdsaklFdGxlU0JUWlhKMmFXTmxjeXhEVGoxVFpYSjJhV05sY3l4RApUajFEYjI1bWFXZDFjbUYwYVc5dUxFUkRQV2RzYjJKaGJDeEVRejFqYjNKd0xFUkRQWE5oY0Q5alpYSjBhV1pwClkyRjBaWEpsZG05allYUnBiMjVzYVhOME1CMEdBMVVkRGdRV0JCUU1DTWlQRENla0FQQ2VNWGRiNGJ3ZHVCNUwKRFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3T3dZRFZSMFJCRFF3TW9JVmMyVnlkbVZ5TURFdVkzTnpMbk5oY0M1agpiM0p3Z1JsSk1EUXlOVEF3UUdWNFkyaGhibWRsTG5OaGNDNWpiM0p3TUF3R0ExVWRFd0VCL3dRQ01BQXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0lCQUIvSDJVeWJBdnUyK2tDWUhXcm12Sy9rQTROczdqUEozRk9PSTRoZHJmcG4KcndFZ2o0UXVhckZNbUNnWVdzazF2dExPai9IREZiVWliQkZjZ3NQZkMxSUV4eGJhNXVmdWFZbm1JcytyamE2RAp1dEZKNGpHT29qdzlkVktpWU8rbGZaU2pHcW5qd3Evck9NYytWckQzc3pwb20wbGFtRUt6ZUpVY3JScThvL1RJCks1d0VHeThDT2JSWmxiWEZQblFZUUtZeTFheGhQTHZwMW5QYUd4NUloRHp4aldpbnZiMnVja2hmZldSMGZrUWYKNjY5VnFNQVpqS2JDeWEyeThVeXVGS1lmT2NiMUJ1TVF4QVNYZ1R1VTY1NDZFc1NhNlBEZEgrbTl3ZEZhY0Q3SQpPeFo4TE1IaW9jeGtsdjRQa0JCZ1hEYVRzNjZpZlp0Myt4MHk4M252MlR2N05BOExMMjJrNWJuKzcrR1pzTDdjCjcwWkhiNHRVZnN6ZDY4MWM3M0tQc2o0SDhRTlV2TkpiZlRCMTZPV2dybzJsdWJKOWR6QmdERWl6aWhvTjJKN3MKQkMxdmhOa2l6a1pxSUhwY0hMckNFaEZJdXZXSDdOcWVpcGRKSVhUdXJKdFNTdTZtbXhxL0ZWK3ZXKzc2RndnSgpORUNiZHIzVlF5UUJRdUF6WkFBTGRBOC9HVHpXTHJlWXU5ckNIYUJPdGprUmF6YXRjQ1l3UHg2ellrSHBnK3NDClhuZ0JBSWpWeWlWU0hlekxSQ1V0ejZhN2RIcFRMN1NPVG9LM3NDeHd3dU1CVnVBTEJub1FaQzdMSmZjZUlmRWoKMlF2QnZPWERLcnlmaFErU3hGUmpMeDYrOHNuV2hOZGhMbmluU3JCcTdiWTFDTXZoVCtPdDRxU0Y5Q3FtOEJ2NQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t`,"base64");

const key = Buffer.from(`QmFnIEF0dHJpYnV0ZXMNCiAgICBmcmllbmRseU5hbWU6IG15a2V5DQogICAgbG9jYWxLZXlJRDogNTQgNjkgNkQgNjUgMjAgMzEgMzYgMzggMzcgMzYgMzYgMzAgMzQgMzcgMzcgMzYgMzMgMzAgDQpLZXkgQXR0cmlidXRlczogPE5vIEF0dHJpYnV0ZXM+DQotLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS0NCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ2tmV3dmK3pMU25ralcNCnV3TnRwbi82L2dyS3hVMTRKYVdTMFVTVk53T1M5cVllTmdnWE1iRjl4WldMbjhKT3ZzZ055VlNSYk1CNk94aFYNCndWWnlnc214ZU9UNjFMbldWTnNaWjh2ZHM4QklzdnFXN3lEUlhhY25FRUdZMXJ1VjBESGt4UkluMThCZEEwVzINCmwwMFFuQXJ0MXp5eWFLZzdHNlVrcVE0NEJhd20vYmNDeHhUem0zSWM3QmNoQUVVbThWRllHaWlPN2hIVTRvVFINCk9aYm5ENkhjVi95am1Ka0RpRWpHRmkwNVNlZEJEc3A1akZtTEtoOHpSSjFoVVhMZjMyWVZpU042WmY2aXRaNFYNCmc1US9lRU13dmFLd0J4SWpyVmtOT3BuY0MvT0tDMGRnOGVBWmRVZ0tKV1dGdWRqL0d1anpYcVVXVm9tNStpMVcNCm9NTmJKNDRMQWdNQkFBRUNnZ0VBUVRZd0xhV3JDbkVTTTM5RTVxM0J3MElBQ1UrYlhPeWY3Y3JsUTdyaHdkdmoNCkU4c2IvZ1lIZGZObFRFdHovMEFIazkramxWdm1Hdzllb0hEYjB0NGpGQ2Izc0xHeFUxV2szemVWVFRtOEc1WkoNClhwbERDMzN6akxzWEpuN0xNNk9zaENQVkJOSzJRcW5QYzRvY1ZWOW52Yzg5RXdZRzNCZ2pxcHNUTmdhWnI0TDINCjhZREdZbmd2d28yb0pIWjEzc3hTN0JTZFlNZ3pxMzdLVTY1OHhZWjk1RnlmNDNibDBPc21wTWZrVFhBczRKUFQNCkE4eHpTMW5qaXRVVDFrTUNVQ3VuRkYrQ3p6TUg3NmtaMk9mb3V4OUQvMk92aG1kaXJUaG5GQU4zdjFQUlpjUmINClI3bldTR2lvUkFJeTNDVGtlM01zcE5TR2hGdEJnQ2lrU09tWEcrejFFUUtCZ1FEa0piVDRsUHVnWU1od1RhOWsNCnJQN0tNNWlhdFlJNEdwK2g4TTBqRjRkdjczYjlLckVpbzNTajdtTWdGRVpWSVhrZ0ZVZ0NSSlhPVnNNSXNORGcNClgwbEtSb0FSQUpGdjRaYTJpZW9ZRDJKNkhPczl2a25oYkRSYW5BeWJtOVZkY0ltenl5MitBdFI4NUNMV0FuV0cNCmJRb3ZJOXVyVGRzcXEwSDkrS05HYmw1VUpRS0JnUUM0a2pyMlhVSks1a2E5dVB1YkhtUkE4aTUvdE5UYjZ2MVQNCmM3eS82amlid2U4K0xQMDBoUk14Nnd1ZWNYTFk0VW1HbkFBcTBpOHlJZmFxdnpiWXZneXZ6TmVlU0Ztby92S2gNClN5VFBUQ0J2Y3NTcmdxclZXcHVKRnMyRDQ0Vk44TWJBOTQ1RzFtcTJ1ZjlDMm0zQ0N6T0Jncm5Jemg2OExJTnkNCmtaNzZZTGNxYndLQmdRQ0xFODFwUi9ESWlKZEhscVBYL0hscHErQllWMU9sZmQxWUsrSHhoWE5qc2hmWUp3RksNCmUxZ3NZckw4cUQ5anYvOEZwdE41eG5PSUVHM2VTMk5aazl5cXNhVjZOOTF3MVpVNWU0TS8zWWtMcGJ0bHJTMSsNCmhLYTVvYTB4NHVKRGpzbnkxMlh3RWV1VW9zSDFzaFFRdVVIZkVMM2xoSldaUWtMOVhtZXlGSy9lSFFLQmdHSHMNCkl5QW1Kays2a0htRHRPbDlYRThncmc3UEQ4ZUZpdFZGcURSaHZaclZiMnFiVDlNWGJ6R2l0RTFoZno4VmQzN1YNCk1UbUd2Y2RwUVljaFg2WHFYcXkranY3SS85aXJPbXJjaFREK0FJOWdZbnRrSGVLSDZkRDNxaDE1RG5abGNlMWENCjZiOG5id0oyOTdpdVRtRU90RXJYNGwxcERlRmo5SEZLVlFBZFk5QTlBb0dCQUxYU1V5dk9OS0NLZjJHbmNqaE4NCmtVSE4wTnIrdU1NaElyZDZCR0FPNFg0cTgwdWYvRkk5MUxuWklXWEE0d3dCYmJ6enVkYUwxNXhLMVdCUE8rcWcNCmRhTTd6VitNQXBPcWkzcHZzdnVqYThpeVBiMmZ6dEN4c0ZIZ0xncnNHOUJOWlgxUXh6bTJxai9WQzVoQ1dzM3MNCmJteUtaS2Jjdkc1blN1dFRKMFlxdy9mZA0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ0K`,"base64");


const server = https.createServer({
  cert, key
},async (req,res)=>{
  console.log(`Method: ${req.method}`);
  console.log(`Path : ${req.url}`);
  console.log(`Headers : `);
  console.log(JSON.stringify(req.headers,null,"  "));
  if (req.method === "GET" && req.url === "/"){
    res.statusCode = 200;
    res.end();
    return;
  }
  try{
    let p = req.url.split("?")[0].split("/");
    let fn = p.pop();
    let fExt = fn.split(".").pop();
    let content = await fs.readFile(path.join(".", ...p, fn));
    res.statusCode = 200;
    res.setHeader("Access-Control-Allow-Origin","*");
    if (undefined !== mimeType[fExt]){
      res.setHeader("Content-Type", mimeType[fExt]);
    }
    res.end(content);
    return;
  }catch(e){
    console.log(e);
    res.statusCode = 400;
    res.end(`File ${req.url} not found`);
    console.log(`File ${req.url} not found`);
    return;
  }
})

server.listen(port,hostname,()=>{
  console.log("started");
})